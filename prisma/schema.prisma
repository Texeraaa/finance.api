// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  name        String
  email       String    @unique
  passwordHash String
  createdAt   DateTime  @default(now())
  transactions Transaction[]
  balance     Balance?

  @@map("users")
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String
  type      CategoryType
  createdAt DateTime @default(now())
  transactions Transaction[]

  @@map("categories")
}

model Transaction {
  id          Int      @id @default(autoincrement())
  userId      Int
  categoryId  Int
  amount      Float    // Armazena o valor da transação
  date        DateTime // Data da transação
  description String?  // Descrição opcional
  createdAt   DateTime @default(now())

  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  category    Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@map("transactions")
}

model Balance {
  userId  Int   @id
  balance Float @default(0.0)

  user    User  @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("balances")
}

enum CategoryType {
  Entrada
  Saida
}